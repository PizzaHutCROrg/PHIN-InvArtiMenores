
@model List<InventarioArtMenores.Models.Inventario>

@{
    ViewBag.Title = "Index";
}

<h2>Reporte de históricos de inventarios</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
@{
    var descripcion = Session["desResArti"].ToString();
}
<label><strong style="font-size: 1.3em">@descripcion</strong></label>
<hr />

@if (TempData["Message"] != null)
{
    <div class="alert alert-primary alert-dismissible fade show" role="alert" style="width: fit-content;">
        <strong>@TempData["Message"]</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div id="overlay" style="display:none;">
    <div id="spinner" class="spinner">
        <img src="~/assets/img/loading.gif" alt="Cargando..." />
    </div>
</div>

<div class="form-horizontal">

    <div class="form-group">
        <label for="filtroNumTF">NumTF:</label>
        <input type="text" id="txtNumTF" name="txtNumTF" value="@ViewBag.FiltrotxtNumTF" placeholder="Filtrar por Número" />
    </div>
    @*<div class="form-group">
            <label for="fechaInicio">Fecha de inicio:</label>
            <input type="date" id="fechaInicio" name="fechaInicio" value="@ViewBag.FechaInicio" max="@ViewBag.FechaMaxima" class="form-control" />
        </div>

        <div class="form-group">
            <label for="fechaFin">Fecha de fin:</label>
            <input type="date" id="fechaFin" name="fechaFin" value="@ViewBag.FechaFin" max="@ViewBag.FechaMaxima" class="form-control" />
        </div>*@
    <br />
    <button id="filtrarBtn" class="btn btn-secondary">Filtrar</button>
    <br />
    @*<div class="form-group">
            <label>
                Sorting Field:
                <select id="sortingField">
                    <option>NumTF</option>
                    <option>Artículo</option>
                    <option>Código</option>
                </select>
                <button type="button" id="sort">Ordenar</button>
            </label>
        </div>*@
</div>
<br />
<br />



    <div class="table-responsive">
        <table id="jsGrid"></table>
    </div>

    <br />
    <br />


    <script>

    $.noConflict();
    jQuery(document).ready(function ($) {
       // $("#jsGrid").hideCol("NumTF");
        $("#jsGrid").jsGrid({
             //width: "100%",
             //height: "600px",
             width: "100%",
             height: "600px", //"auto",

             filtering: true,  // Habilitar el filtrado
             inserting: false,
             //editing: true,// Permitir la edición directa en la tabla
            // sorting: true,// Habilitar el ordenamiento
            // paging: true,
            autoload: true,
            selecting: false,
            // viewrecords: true, // Muestra el número de registros
             rownumbers: true,
             rownumWidth: 40, // Ajusta el ancho de la columna de números de fila

            // datatype: 'local', // Temporalmente 'local' para cargar los datos manualmente v3

             pageSize: 20,//cuantos por página
            pageButtonCount: 20,//cuantas lineas se ven sin scroll
            //loadonce: true, // Asegura que los datos se cargan en el cliente para el ordenamiento

            // deleteConfirm: "¿Está seguro de que desea eliminar este artículo menor?",

             controller: {
                  loadData: function(filter) {
                    // Obtener los valores de los campos de filtro del formulario
                     var txtNumTFF = $("#txtNumTF").val();
                     var field = $("#sortingField").val();
                   // var numArtiFiltro = $("#numArtiFiltro").val();

                   //  console.log("Filtros enviados:", txtNumTFF); // Debug: Verifica los valores
                     // Comprobación de los parámetros de ordenamiento
                   //  console.log("Sort Field:", filter.sortField);
                   //  console.log("Sort Order:", filter.sortOrder);

                     // Si los parámetros son undefined, intenta usar los predeterminados
                   //  var sortField = filter.sortField || "ObjArticulo.CodMateria";
                   //  var sortOrder = filter.sortOrder || "desc";

                    // Añadir los filtros al objeto de filtro, junto con el campo y el orden de la ordenación
                    return $.ajax({
                        type: "GET",
                       url: '@Url.Action("ObtenerArticulos", "Report")',
                        data: $.extend(filter, {
                            txtNumTF: txtNumTFF,
                            sortField: field,
                            sortOrder: "sort"
                          //  sortField: sortField,  // Envía el campo de ordenación al servidor
                         //   sortOrder: sortOrder   // Envía el orden al servidor
                            //NumArti: numArtiFiltro
                        }),  // Extiende el filtro con los datos de filtrado
                        dataType: "json",
                        error: function(jqXHR, textStatus, errorThrown) {
                            console.error("Error en la solicitud AJAX:", textStatus, errorThrown);
                        }
                    });
                }
             },

             fields: [
                 {
                     title: "#",
                     itemTemplate: function (_, item) {
                         var index = $.inArray(item, $("#jsGrid").jsGrid("option", "data"));
                         return index + 1;
                     },
                     width: 30,
                     align: "center"
                 },
                 { name: "NumTF", type: "number", width: 50, title: "NumTF", readOnly: true, align: "right", filtering: true, sorting: true },
                 /*      { name: "CodMateria", type: "text", width: 60, title: "Código", readOnly: true, align: "left"*//*, filtering: true *//*},*/
                 {
                     name: "ObjArticulo.CodMateria",
                     type: "text",
                     width: 60,
                     title: "Código",
                     align: "left",
                     readOnly: true,
                     // Personalización del campo de filtrado manteniendo el ícono de lupa y comportamiento predeterminado
                     filterTemplate: function () {
                         var $input = this._filterInput = $("<input>").attr("type", "text")
                             .addClass("jsgrid-filter-input");  // Añadir clase predeterminada para estilo

                         return $input;
                     },
                     filterValue: function () {
                         return this._filterInput.val();
                     }
                     //,sorting: true
                 },
                /* { name: "NomMateria", type: "text", width: 150, title: "Artículo", readOnly: true, align: "left" },*/
                 {
                     name: "ObjArticulo.NomMateria",
                     type: "text",
                     width: 150,
                     title: "Artículo",
                     align: "left",
                     readOnly: true,
                     // Personalización del campo de filtrado manteniendo el ícono de lupa y comportamiento predeterminado
                     filterTemplate: function () {
                         var $input = this._filterInput = $("<input>").attr("type", "text")
                             .addClass("jsgrid-filter-input");  // Añadir clase predeterminada para estilo

                         return $input;
                     },
                     filterValue: function () {
                         return this._filterInput.val();
                     }
                    
                 },
                 { name: "ObjArticulo.Factor", type: "number", width: 50, title: "Factor", readOnly: true, align: "right", filtering: false },
                 { name: "ObjArticulo.Teorico", type: "number", width: 50, title: "Teórico", readOnly: true, align: "right", filtering: false/*, visible: false*/ },
                 { name: "ObjArticulo.Fisico", type: "number", width: 50, title: "Físico", readOnly: true, align: "right", filtering: false },
                 { name: "ObjArticulo.Diferencia", type: "number", width: 50, title: "Diferencia", readOnly: true, align: "right", filtering: false },
                /* { name: "NumTF", type: "number", width: 50, title: "NumTF", hidden: true, editable: false, editrules: { edithidden: false }, hidedlg: true },//prueba*/
                 { type: "control", width: 50, editButton: false, deleteButton: false }
                 // { label: 'Precio', name: 'precio', width: 100, formatter: 'currency', formatoptions: { prefix: '$' } },

             ]
         });
        // Botón para aplicar el filtro
        $("#filtrarBtn").on("click", function () {
            $("#jsGrid").jsGrid("loadData"); // Recarga los datos con los nuevos filtros
        });
        $("#sort").on("click", function () {
            var field = $("#sortingField").val();
            console.log("Sort Field:", field);
            // $("#jsGrid").jsGrid("sort", field);
            $("#jsGrid").jsGrid("loadData"); // Recarga los datos con los nuevos filtros
        });



    });


    </script>
    <style>
        #overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5); /* Fondo semi-transparente */
            z-index: 9999; /* Asegura que el overlay esté encima de todo */
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .spinner img {
            width: 100px; /* Tamaño del spinner */
            height: 100px;
        }
    </style>
