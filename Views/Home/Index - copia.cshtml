
@model List<InventarioArtMenores.Models.ArticuloViewModel>


@{
    ViewBag.Title = "Home Page";
}

<div class="form-horizontal">
    <h4>Buscar el Artículo</h4>
    <hr />

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-primary alert-dismissible fade show" role="alert" style="width: fit-content;">
            <strong>@TempData["Message"]</strong>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }


    @*<input type="text" id="categoriaFiltro" placeholder="Filtrar por Categoría" />*@
    <label>Filtros:</label>
    <select id="estadoFiltro">
        <option value="0">Todos</option>
        <option value="1">Activos</option>
        <option value="2">Sin Conteo</option>
        <option value="3">Con Conteo</option>
        <option value="4">Con Diferencia</option>
        <option value="5">Falta Conteo</option>
    </select>
    <button id="filtrarBtn">Filtrar</button>


</div>
<br />
<br />

<div id="jsGrid"></div>

<!-- Botón para procesar todos los datos -->
<button id="processButton" class="btn btn-primary">Procesar Todos los Datos</button>


<script>

    $.noConflict();
    jQuery(document).ready(function ($) {
         $("#jsGrid").jsGrid({
             //width: "100%",
             //height: "600px",
             width: "100%",
             height: "600px", //"auto",

             filtering: true,  // Habilitar el filtrado
             inserting: false,
             editing: true,
             sorting: true,
            // paging: true,
             autoload: true,

             pageSize: 20,//cuantos por página
             pageButtonCount: 20,//cuantas lineas se ven sin scroll

            // deleteConfirm: "¿Está seguro de que desea eliminar este artículo menor?",

             controller: {
                 loadData: function (filter) {

                     // Obtiene el valor del input externo
                     var categoriaFiltro = $("#categoriaFiltro").val();
                     var estadoFiltro = $("#estadoFiltro").val();

                     // Añade los filtros al objeto de filtro
                   //  filter.Categoria = categoriaFiltro;
                     filter.Estado = estadoFiltro;


                     return $.ajax({
                         type: "GET",
                         url: '@Url.Action("ObtenerArticulos", "Home")',
                         data: filter, // Pasa los filtros al servidor
                         dataType: "json"
                     });
                 },
                 updateItem: function(item) {
                     return $.ajax({
                         type: "POST",
                         url: '@Url.Action("ActualizarArticulos", "Home")',
                         data: item,
                         dataType: "json",
                         success: function (response) {
                             if (response.success) {
                                 // Recargar la tabla
                                 $("#jsGrid").jsGrid("loadData");
                             } else {
                                 alert("No se pudo actualizar el artículo menor 01");
                             }
                         },
                         error: function () {
                             alert("Error al actualizar el artículo menor 02");
                         }
                     });
                 }
             },

             fields: [
                 /*      { name: "CodMateria", type: "text", width: 60, title: "Código", readOnly: true, align: "left"*//*, filtering: true *//*},*/
                 {
                     name: "CodMateria",
                     type: "text",
                     width: 60,
                     title: "Código",
                     align: "left",
                     readOnly: true,
                     // Personalización del campo de filtrado manteniendo el ícono de lupa y comportamiento predeterminado
                     filterTemplate: function () {
                         var $input = this._filterInput = $("<input>").attr("type", "text")
                             .addClass("jsgrid-filter-input");  // Añadir clase predeterminada para estilo

                         return $input;
                     },
                     filterValue: function () {
                         return this._filterInput.val();
                     }
                 },
                /* { name: "NomMateria", type: "text", width: 150, title: "Artículo", readOnly: true, align: "left" },*/
                 {
                     name: "NomMateria",
                     type: "text",
                     width: 150,
                     title: "Artículo",
                     align: "left",
                     readOnly: true,
                     // Personalización del campo de filtrado manteniendo el ícono de lupa y comportamiento predeterminado
                     filterTemplate: function () {
                         var $input = this._filterInput = $("<input>").attr("type", "text")
                             .addClass("jsgrid-filter-input");  // Añadir clase predeterminada para estilo

                         return $input;
                     },
                     filterValue: function () {
                         return this._filterInput.val();
                     }
                 },
                 { name: "Factor", type: "number", width: 50, title: "Factor", readOnly: true, align: "right", filtering: false },
                 { name: "Teorico", type: "number", width: 50, title: "Teórico", readOnly: true, align: "right", filtering: false },
                 { name: "Fisico", type: "number", width: 50, title: "Físico", align: "right", filtering: false },
                 { name: "Diferencia", type: "number", width: 50, title: "Diferencia", readOnly: true, align: "right" },
                 /*{ type: "control", width: 50, editButton: true, deleteButton: false }*/
             ]
         });
        // Botón para aplicar el filtro
        $("#filtrarBtn").on("click", function () {
            $("#jsGrid").jsGrid("loadData"); // Recarga los datos con los nuevos filtros
        });

        // Manejo del botón que procesa todos los datos
        $("#processButton").on("click", function () {
            // Obtener todos los datos de la tabla
            var allData = $("#jsGrid").jsGrid("option", "data");

            // Aquí puedes hacer algo con todos los datos, por ejemplo, enviarlos al servidor
            $.ajax({
                type: "POST",
                url: "/tuControlador/ProcesarTodosLosDatos",
                data: JSON.stringify(allData),  // Envía todos los datos como JSON
                contentType: "application/json",
                success: function (response) {
                    alert("Datos procesados exitosamente.");
                },
                error: function () {
                    alert("Error al procesar los datos.");
                }
            });
        });

    });

</script>
